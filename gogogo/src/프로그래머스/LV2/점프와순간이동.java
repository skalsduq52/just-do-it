package 프로그래머스.LV2;

import java.util.Arrays;
import java.util.HashMap;

public class 점프와순간이동 {

	public static void main(String[] args) {

		/*
		 * 문제
		 * OO 연구소는 한 번에 K 칸을 앞으로 점프하거나, 
		 * (현재까지 온 거리) x 2 에 해당하는 위치로 순간이동을 할 수 있는 특수한 기능을 가진 아이언 슈트를 개발하여 판매하고 있습니다. 
		 * 이 아이언 슈트는 건전지로 작동되는데, 순간이동을 하면 건전지 사용량이 줄지 않지만, 앞으로 K 칸을 점프하면 K 만큼의 건전지 사용량이 듭니다. 
		 * 그러므로 아이언 슈트를 착용하고 이동할 때는 순간 이동을 하는 것이 더 효율적입니다. 
		 * 아이언 슈트 구매자는 아이언 슈트를 착용하고 거리가 N 만큼 떨어져 있는 장소로 가려고 합니다. 
		 * 단, 건전지 사용량을 줄이기 위해 점프로 이동하는 것은 최소로 하려고 합니다. 
		 * 아이언 슈트 구매자가 이동하려는 거리 N이 주어졌을 때, 
		 * 사용해야 하는 건전지 사용량의 최솟값을 return하는 solution 함수를 만들어 주세요.
		 *  
		 *  제한사항
		 *  숫자 N: 1 이상 10억 이하의 자연수
		 *  숫자 K: 1 이상의 자연수.
		 *  
		 */
		
		int N = 1000000000;

		int ans = 0;
		
		while(N != 0) {
			if(N%2==0) {
				N/=2;
			}else {
				N--;
				ans++;
			}
		}
		
		System.out.println(ans);
		
		
	}
}
